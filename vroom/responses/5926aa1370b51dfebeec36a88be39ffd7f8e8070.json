{
  "search_response": [
    {
      "status": 0, 
      "hit_max_results": true, 
      "estimated_total_number_of_results": 1634, 
      "stats": {
        "retries": 0, 
        "filter_ratio": 0, 
        "first_phase_latency_micros": "149559"
      }, 
      "search_result": [
        {
          "snippet": [
            {
              "text": {
                "text": "// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nlog(\"Hello World\");\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 1, 
                      "end_column": 3
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 3, 
                      "end_column": 74
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 1, 
                      "end_column": 3
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 3, 
                      "end_column": 30
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 5, 
                      "end_column": 18
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 6, 
                      "end_column": 17
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 2, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "pqDb6Zlk-0Q", 
          "best_matching_line_number": 5, 
          "language": "javascript", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "6f09100043cce0c1cd4ade3c4f455185d7893769", 
              "name": "src/gin/shell/hello_world.js", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "    // Create a new context.\n    v8::Local<v8::Context> context = v8::Context::New(isolate);\n\n    // Enter the context for compiling and running the hello world script.\n    v8::Context::Scope context_scope(context);\n\n    {\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 2, 
                      "start_column": 5, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 5, 
                      "start_column": 5, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 56, 
                      "end_column": 67
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 31, 
              "match_reason": {
                "content": true
              }, 
              "scope": "main"
            }
          ], 
          "docid": "fYOPj_1RjeM", 
          "best_matching_line_number": 34, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "d75dcb3c3cc4eff1e42d84f79de43ea8f35dff88", 
              "name": "src/v8/samples/hello-world.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "```cpp\nvoid MyFunc(int i, const std::string& str) {}\nbase::Callback<void()> cb = base::Bind(&MyFunc, 23, \"hello world\");\ncb.Run();\n```\n\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 54, 
                      "end_column": 65
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 226, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "UCXWw5a0OqQ", 
          "best_matching_line_number": 228, 
          "language": "markdown", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "8bc036066f5434fb93e7d94ad3be2d3fe02c2a63", 
              "name": "src/docs/callback.md", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 3
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "       ['{ x }'],\n       'Expecting property name:'),\n      ('invalid_json_2.json',\n       ['// Hello world!',\n        '{ \"hello\": \"world }'],\n       'Unterminated string starting at:'),\n      ('invalid_json_3.json',\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 9, 
                      "end_column": 16
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 8, 
                      "end_column": 34
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 8, 
                      "end_column": 29
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 9, 
                      "end_column": 26
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 13, 
                      "end_column": 24
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 9, 
                      "end_column": 30
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 8, 
                      "end_column": 42
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 8, 
                      "end_column": 29
                    }, 
                    "type": 4
                  }
                ]
              }, 
              "first_line_number": 382, 
              "match_reason": {
                "content": true
              }, 
              "scope": "JSONParsingTest.testFailure"
            }
          ], 
          "docid": "HVOJlyDljZ8", 
          "best_matching_line_number": 385, 
          "language": "python", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "3908e4d7c6b0b4c9fd6fd37e51ad99e8c7d51cd8", 
              "name": "src/PRESUBMIT_test.py", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "# Hello World service\n\nCan generate a greeting string in different tones and languages.\n\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 3, 
                      "end_column": 14
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 1, 
              "match_reason": {
                "content": true
              }
            }, 
            {
              "text": {
                "text": "## Security\n\nHello World service is safe to use for internal projects.\nIt uses [standard \"access\" project metadata field](project_registry.md#access).\n\n## Limitations\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 1, 
                      "end_column": 12
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 27, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "blR0XixLEAQ", 
          "best_matching_line_number": 1, 
          "language": "markdown", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "e385808c66b0feef2bed5f823cd900d088f6bf42", 
              "name": "infra/doc/users/services/hello_world.md", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "def check_hello_world(toolset_root):\n  \"\"\"Compiles and runs 'hello world' program to verify that toolset works.\"\"\"\n  with temp_dir(toolset_root) as tmp:\n    path = os.path.join(tmp, 'hello.go')\n    write_file([path], r\"\"\"\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 1, 
                      "end_column": 4
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 3, 
                      "end_column": 78
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 25, 
                      "end_column": 36
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 3, 
                      "end_column": 7
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 31, 
                      "end_column": 33
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 30, 
                      "end_column": 40
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 6, 
                      "start_column": 24, 
                      "end_column": 1
                    }, 
                    "type": 4
                  }
                ]
              }, 
              "first_line_number": 210, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "QRo4ZyWLoR8", 
          "best_matching_line_number": 211, 
          "language": "python", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "810b787058dcba6c4a5769db396562006f115d92", 
              "name": "infra/go/bootstrap.py", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "namespace net {\n\n// Return a std::string of binary data represented by the hex string |input|.\n// For example, HexDecode(\"48656c6c6f20776f726c6421\") == \"Hello world!\"\n// This is the inverse function of base::HexEncode().\nNET_EXPORT_PRIVATE std::string HexDecode(base::StringPiece input);\n\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 1, 
                      "end_column": 10
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 4, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 5, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 59, 
                      "end_column": 70
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 6, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }
                ]
              }, 
              "first_line_number": 13, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "KlmmTL1a0zI", 
          "best_matching_line_number": 16, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "3343d6d214c52c243e33b5a96fb549af2aec9371", 
              "name": "src/net/base/hex_utils.h", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  std::string output;\n  ASSERT_TRUE(base::GetAppOutput(cmd, &output));\n  base::TrimWhitespaceASCII(output, base::TRIM_ALL, &output);\n  ASSERT_EQ(\"Hello World\", output);\n}\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 13, 
                      "end_column": 26
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 14, 
                      "end_column": 25
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 39, 
              "match_reason": {
                "content": true
              }, 
              "scope": "GinShellTest_HelloWorld"
            }
          ], 
          "docid": "vjcy9igsdgg", 
          "best_matching_line_number": 42, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "5c7dd0cd9e2469d0ae05ce59f6a9f4f1ccb991c2", 
              "name": "src/gin/shell/gin_shell_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "console.log('hello world');\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 14, 
                      "end_column": 25
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 1, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "wRyuUxg5Q4A", 
          "best_matching_line_number": 1, 
          "language": "", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "6be02374db118b9fb99cd98c6b403e5a558d0d57", 
              "name": "src/v8/test/fuzzer/parser/hello-world", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  ///\n  /// The following JavaScript code invokes <code>HandleMessage</code>, passing\n  /// the instance on which it was invoked, with <code>message</code> being a\n  /// string <code>Var</code> containing \"Hello world!\"\n  ///\n  /// @code{.html}\n  ///\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 2, 
                      "start_column": 3, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 3, 
                      "start_column": 3, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 4, 
                      "start_column": 3, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 5, 
                      "start_column": 3, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 43, 
                      "end_column": 54
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 6, 
                      "start_column": 3, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 7, 
                      "start_column": 3, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 8, 
                      "start_column": 3, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }
                ]
              }, 
              "first_line_number": 255, 
              "match_reason": {
                "content": true
              }, 
              "scope": "pp::Instance"
            }
          ], 
          "docid": "iLD7eYUBVCY", 
          "best_matching_line_number": 258, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "1101f511fd8bd36e5f31c909ddd75c1468d48514", 
              "name": "src/ppapi/cpp/instance.h", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 4
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "<p>Hello World!</p> ...", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 2, 
                      "end_column": 3
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 4, 
                      "end_column": 15
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 18, 
                      "end_column": 19
                    }, 
                    "type": 3
                  }
                ]
              }, 
              "first_line_number": 1, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "1FyWPtpz2eQ", 
          "best_matching_line_number": 1, 
          "language": "html", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "63c016cdc12de31b8981eaf27d0852aac2e18bf6", 
              "name": "src/net/data/test.html", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "Examples\n\n  print(\"Hello world\")\n\n  print(sources, deps)\n)\";\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 6, 
                      "start_column": 1, 
                      "end_column": 3
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 10, 
                      "end_column": 21
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 974, 
              "match_reason": {
                "content": true
              }, 
              "scope": "functions::kPrint_Help"
            }
          ], 
          "docid": "SzbOWGJ8V8c", 
          "best_matching_line_number": 976, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "e7fb5246620665c805839c0d83dc0ccc86d5717f", 
              "name": "src/tools/gn/functions.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "def main():\n  print('Hello world: ' + sys.argv[1])\n  if len(sys.argv) == 3:\n    # Write a file in ${ISOLATED_OUTDIR}.\n    p = os.path.join(sys.argv[2].decode('utf-8'), u'da &#128163;.txt').encode('utf-8')\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 1, 
                      "end_column": 4
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 3, 
                      "end_column": 8
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 9, 
                      "end_column": 24
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 10, 
                      "end_column": 21
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 36, 
                      "end_column": 37
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 3, 
                      "end_column": 5
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 23, 
                      "end_column": 24
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 1, 
                      "end_column": 42
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 31, 
                      "end_column": 32
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 41, 
                      "end_column": 48
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 51, 
                      "end_column": 62
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 71, 
                      "end_column": 78
                    }, 
                    "type": 4
                  }
                ]
              }, 
              "first_line_number": 13, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "tgroQjzkkeI", 
          "best_matching_line_number": 14, 
          "language": "python", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "1978088c825d9956d5cccd22dee2c2157b4329ab", 
              "name": "infra/luci/client/example/payload/hello_world.py", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  EXPECT_EQ(0u, Hash(str));\n\n  // Simple test.\n  str = \"hello world\";\n  EXPECT_EQ(2794219650u, Hash(str));\n\n  // Change one bit.\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 13, 
                      "end_column": 14
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 4, 
                      "start_column": 3, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 9, 
                      "end_column": 22
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 10, 
                      "end_column": 21
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 13, 
                      "end_column": 23
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 8, 
                      "start_column": 3, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }
                ]
              }, 
              "first_line_number": 18, 
              "match_reason": {
                "content": true
              }, 
              "scope": "base::HashTest_String"
            }
          ], 
          "docid": "CL_JBSiJ_-Q", 
          "best_matching_line_number": 21, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "fc8a7519ee98008e439a7c944ec8137fca1759bf", 
              "name": "src/base/hash_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 4
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "    return out << \"Streamable\";\n  }\n  TEST_F(LoggingTest, StreamingWstringFindsCorrectOperator) {\n    std::wstring wstr = L\"Hello World\";\n    std::ostringstream ostr;\n    ostr << wstr;\n    EXPECT_EQ(\"Hello World\", ostr.str());\n  }\n}  // namespace nested_test\n\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 5, 
                      "end_column": 11
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 19, 
                      "end_column": 31
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 26, 
                      "end_column": 39
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 27, 
                      "end_column": 38
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 15, 
                      "end_column": 28
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 16, 
                      "end_column": 27
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 9, 
                      "end_line": 10, 
                      "start_column": 4, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }
                ]
              }, 
              "first_line_number": 716, 
              "match_reason": {
                "content": true
              }, 
              "scope": "logging::<anonymous>::nested_test::operator<<"
            }
          ], 
          "docid": "FqTGZSZfjY4", 
          "best_matching_line_number": 719, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "35ceba1da6d74b4fb08f2821ce1937a396f94e79", 
              "name": "src/base/logging_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "   *\n   * The following JavaScript code invokes <code>HandleMessage</code>, passing\n   * the module instance on which it was invoked, with <code>message</code>\n   * being a string <code>PP_Var</code> containing \"Hello world!\"\n   *\n   * <strong>Example:</strong>\n   *\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 8, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 53, 
                      "end_column": 64
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 58, 
              "match_reason": {
                "content": true
              }, 
              "scope": "PPP_Messaging_1_0"
            }
          ], 
          "docid": "52KdiC-eyjY", 
          "best_matching_line_number": 61, 
          "language": "c", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "28d40d6e4b8ea30f8d124b28b7278a536d75b071", 
              "name": "src/ppapi/c/ppp_messaging.h", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "   *\n   * @code\n   *\n   *  char hello_world[] = \"Hello world!\";\n   *  PP_Var hello_var = ppb_var_interface->VarFromUtf8(instance,\n   *                                                    hello_world,\n   *                                                    sizeof(hello_world));\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 8, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 29, 
                      "end_column": 40
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 87, 
              "match_reason": {
                "content": true
              }, 
              "scope": "PPB_Messaging_1_2"
            }
          ], 
          "docid": "0tpcaEAjiVQ", 
          "best_matching_line_number": 90, 
          "language": "c", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "5048d803e023d2ee5e9b2d4d686342dd02a7e52c", 
              "name": "src/ppapi/c/ppb_messaging.h", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "const uint64_t testuint64 = 0xCE8CA925'3104BDF7ULL;\nconst float testfloat = 3.1415926935f;\nconst double testdouble = 2.71828182845904523;\nconst std::string teststring(\"Hello world\");  // note non-aligned string length\nconst std::wstring testwstring(L\"Hello, world\");\nconst string16 teststring16(ASCIIToUTF16(\"Hello, world\"));\nconst char testrawstring[] = \"Hello new world\"; // Test raw string writing\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 1, 
                      "end_column": 6
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 29, 
                      "end_column": 39
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 40, 
                      "end_column": 44
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 1, 
                      "end_column": 6
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 7, 
                      "end_column": 12
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 25, 
                      "end_column": 38
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 1, 
                      "end_column": 6
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 7, 
                      "end_column": 13
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 27, 
                      "end_column": 46
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 1, 
                      "end_column": 6
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 30, 
                      "end_column": 43
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 31, 
                      "end_column": 42
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 5, 
                      "start_column": 47, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 1, 
                      "end_column": 6
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 33, 
                      "end_column": 47
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 1, 
                      "end_column": 6
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 42, 
                      "end_column": 56
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 1, 
                      "end_column": 6
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 7, 
                      "end_column": 11
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 30, 
                      "end_column": 47
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 8, 
                      "start_column": 49, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }
                ]
              }, 
              "first_line_number": 30, 
              "match_reason": {
                "content": true
              }, 
              "scope": "base::<anonymous>"
            }
          ], 
          "docid": "Z5hH5lTCpk0", 
          "best_matching_line_number": 33, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "45630470609e6ba0ca07bf0b2cd00890de0dfa0a", 
              "name": "src/base/pickle_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "      // Invalid schemes should be treated as relative.\n    {\"http://foo/bar\", true, false, \"./asd:fgh\", true, true, true, \"http://foo/asd:fgh\"},\n    {\"http://foo/bar\", true, false, \":foo\", true, true, true, \"http://foo/:foo\"},\n    {\"http://foo/bar\", true, false, \" hello world\", true, true, true, \"http://foo/hello%20world\"},\n    {\"data:asdf\", false, false, \":foo\", false, false, false, NULL},\n    {\"data:asdf\", false, false, \"bad(':foo')\", false, false, false, NULL},\n      // We should treat semicolons like any other character in URL resolving\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 2, 
                      "start_column": 7, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 6, 
                      "end_column": 22
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 24, 
                      "end_column": 28
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 30, 
                      "end_column": 35
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 37, 
                      "end_column": 48
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 50, 
                      "end_column": 54
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 56, 
                      "end_column": 60
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 62, 
                      "end_column": 66
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 68, 
                      "end_column": 88
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 6, 
                      "end_column": 22
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 24, 
                      "end_column": 28
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 30, 
                      "end_column": 35
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 37, 
                      "end_column": 43
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 45, 
                      "end_column": 49
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 51, 
                      "end_column": 55
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 57, 
                      "end_column": 61
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 63, 
                      "end_column": 80
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 6, 
                      "end_column": 22
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 24, 
                      "end_column": 28
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 30, 
                      "end_column": 35
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 37, 
                      "end_column": 51
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 39, 
                      "end_column": 50
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 53, 
                      "end_column": 57
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 59, 
                      "end_column": 63
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 65, 
                      "end_column": 69
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 71, 
                      "end_column": 97
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 6, 
                      "end_column": 17
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 19, 
                      "end_column": 24
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 26, 
                      "end_column": 31
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 33, 
                      "end_column": 39
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 41, 
                      "end_column": 46
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 48, 
                      "end_column": 53
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 55, 
                      "end_column": 60
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 6, 
                      "end_column": 17
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 19, 
                      "end_column": 24
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 26, 
                      "end_column": 31
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 33, 
                      "end_column": 46
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 48, 
                      "end_column": 53
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 55, 
                      "end_column": 60
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 62, 
                      "end_column": 67
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 8, 
                      "start_column": 7, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }
                ]
              }, 
              "first_line_number": 2152, 
              "match_reason": {
                "content": true
              }, 
              "scope": "url::URLCanonTest_ResolveRelativeURL"
            }
          ], 
          "docid": "xze_RBbbvmE", 
          "best_matching_line_number": 2155, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "a29db7f9cff31bb337e0a7496ce6ae62d0145e54", 
              "name": "src/url/url_canon_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "        return;\n    }\n\n    SkString title(\"Hello World \");\n    title.append(Window::kRaster_BackendType == fBackendType ? \"Raster\" : \"OpenGL\");\n    fWindow->setTitle(title.c_str());\n}\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 9, 
                      "end_column": 15
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 20, 
                      "end_column": 34
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 21, 
                      "end_column": 32
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 64, 
                      "end_column": 72
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 75, 
                      "end_column": 83
                    }, 
                    "type": 4
                  }
                ]
              }, 
              "first_line_number": 42, 
              "match_reason": {
                "content": true
              }, 
              "scope": "HelloWorld::updateTitle"
            }
          ], 
          "docid": "oGG6CAUhgx4", 
          "best_matching_line_number": 45, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "b20d30a780729c4dccbeffee1f9179f1e0312b7f", 
              "name": "src/third_party/skia/example/HelloWorld.cpp", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  EXPECT_EQ(\"Hello world!\", HexDecode(\"48656c6C6F20776f726C6421\"));\n}\n\nTEST(HexUtilsTest, HexDump) {\n  EXPECT_EQ(\"\", HexDump(\"\"));\n  EXPECT_EQ(\"0x0000:  4865 6c6c 6f20 776f 726c 6421            Hello.world!\\n\",\n            HexDump(\"Hello world!\"));\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 13, 
                      "end_column": 27
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 14, 
                      "end_column": 25
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 39, 
                      "end_column": 65
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 13, 
                      "end_column": 15
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 25, 
                      "end_column": 27
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 13, 
                      "end_column": 79
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 21, 
                      "end_column": 35
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 22, 
                      "end_column": 33
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 16, 
              "match_reason": {
                "content": true
              }, 
              "scope": "net::test::HexUtilsTest_HexDecode"
            }
          ], 
          "docid": "-vkpmG54P9c", 
          "best_matching_line_number": 16, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "bdf27526cb792d63839e6951b83a2f730e68560d", 
              "name": "src/net/base/hex_utils_test.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "namespace base {\n\nTEST(Base64Test, Basic) {\n  const std::string kText = \"hello world\";\n  const std::string kBase64Text = \"aGVsbG8gd29ybGQ=\";\n\n  std::string encoded;\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 1, 
                      "end_column": 10
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 3, 
                      "end_column": 8
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 29, 
                      "end_column": 42
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 30, 
                      "end_column": 41
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 3, 
                      "end_column": 8
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 35, 
                      "end_column": 53
                    }, 
                    "type": 4
                  }
                ]
              }, 
              "first_line_number": 9, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "syA98L4Cugc", 
          "best_matching_line_number": 12, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "91651f4d39b6b3eecf06d9433ede90cc208162c0", 
              "name": "src/base/base64_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  // Create a table with a broken index.\n  ASSERT_TRUE(db().Execute(\"CREATE TABLE t (id INTEGER PRIMARY KEY, c TEXT)\"));\n  ASSERT_TRUE(db().Execute(\"CREATE UNIQUE INDEX t_id ON t (id)\"));\n  ASSERT_TRUE(db().Execute(\"INSERT INTO t VALUES (1, 'hello world')\"));\n  ASSERT_TRUE(db().Execute(\"INSERT INTO t VALUES (2, 'testing')\"));\n  ASSERT_TRUE(db().Execute(\"INSERT INTO t VALUES (3, 'nope')\"));\n\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 2, 
                      "start_column": 3, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 28, 
                      "end_column": 77
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 28, 
                      "end_column": 64
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 28, 
                      "end_column": 69
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 55, 
                      "end_column": 66
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 28, 
                      "end_column": 65
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 28, 
                      "end_column": 62
                    }, 
                    "type": 4
                  }
                ]
              }, 
              "first_line_number": 839, 
              "match_reason": {
                "content": true
              }, 
              "scope": "<anonymous>::SQLRecoveryTest_BeginRecoverDatabase"
            }
          ], 
          "docid": "P9UFfbFtD_4", 
          "best_matching_line_number": 842, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "3eed190ca06fd0f2dc717a5aedf05f9fa74beb9e", 
              "name": "src/sql/recovery_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  parser = argparse.ArgumentParser()\n  parser.add_argument('name')\n  args = parser.parse_args()\n  print 'Hello world from', args.name\n  return 0\n\n\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 23, 
                      "end_column": 29
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 3, 
                      "end_column": 8
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 9, 
                      "end_column": 27
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 10, 
                      "end_column": 21
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 3, 
                      "end_column": 9
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 10, 
                      "end_column": 11
                    }, 
                    "type": 6
                  }
                ]
              }, 
              "first_line_number": 19, 
              "match_reason": {
                "content": true
              }, 
              "scope": "main"
            }
          ], 
          "docid": "kp0E_-jKme8", 
          "best_matching_line_number": 22, 
          "language": "python", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "0333f7bb0a4f9e1cc18cf25ae83b993fe9f362bb", 
              "name": "src/testing/legion/examples/hello_world/task_test.py", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "#### **Examples**\n\n```\n  print(\"Hello world\")\n\n  print(sources, deps)\n```\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 10, 
                      "end_column": 21
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 2264, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "7QmMTbh6tUE", 
          "best_matching_line_number": 2267, 
          "language": "markdown", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "c773afe56061287756030d0ec1ebac5872c0fbcc", 
              "name": "src/tools/gn/docs/reference.md", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  typedef int (*syswrite_t)(int, char const *, size_t);\n  syswrite_t syswrite = (syswrite_t) (0x10000 + NACL_sys_write * 0x20);\n\n  (void) (*syswrite)(1, \"Hello world\\n\", 12);\n  return 0;\n}\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 3, 
                      "end_column": 10
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 11, 
                      "end_column": 14
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 29, 
                      "end_column": 32
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 34, 
                      "end_column": 38
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 39, 
                      "end_column": 44
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 39, 
                      "end_column": 46
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 66, 
                      "end_column": 70
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 4, 
                      "end_column": 8
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 22, 
                      "end_column": 23
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 25, 
                      "end_column": 40
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 26, 
                      "end_column": 37
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 42, 
                      "end_column": 44
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 3, 
                      "end_column": 9
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 10, 
                      "end_column": 11
                    }, 
                    "type": 6
                  }
                ]
              }, 
              "first_line_number": 12, 
              "match_reason": {
                "content": true
              }, 
              "scope": "main"
            }
          ], 
          "docid": "N7dgn1e2H38", 
          "best_matching_line_number": 15, 
          "language": "c", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "4468c37de4751238c4de21b3a80dd059fa0575c1", 
              "name": "src/native_client/tests/libc_free_hello_world/libc_free_hello_world.c", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "def main():\n  print('Hello world: ' + sys.argv[1])\n  if len(sys.argv) == 3:\n    # Write a file in ${ISOLATED_OUTDIR}.\n    p = os.path.join(sys.argv[2].decode('utf-8'), u'da &#128163;.txt').encode('utf-8')\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 1, 
                      "end_column": 4
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 3, 
                      "end_column": 8
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 9, 
                      "end_column": 24
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 10, 
                      "end_column": 21
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 36, 
                      "end_column": 37
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 3, 
                      "end_column": 5
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 23, 
                      "end_column": 24
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 1, 
                      "end_column": 42
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 31, 
                      "end_column": 32
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 41, 
                      "end_column": 48
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 51, 
                      "end_column": 62
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 71, 
                      "end_column": 78
                    }, 
                    "type": 4
                  }
                ]
              }, 
              "first_line_number": 13, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "61OBGj6fMSk", 
          "best_matching_line_number": 14, 
          "language": "python", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "1978088c825d9956d5cccd22dee2c2157b4329ab", 
              "name": "src/tools/swarming_client/example/payload/hello_world.py", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "class HelloWorld(ScriptBase):\n\n    def main(self):\n        self.log('Hello World!!!')\n        \n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 1, 
                      "end_column": 6
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 5, 
                      "end_column": 8
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 18, 
                      "end_column": 34
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 19, 
                      "end_column": 30
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 24, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "d38FA8bHhBU", 
          "best_matching_line_number": 27, 
          "language": "python", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "680873ce179ee8c78af1cd9ecc8fbeb8d4983b57", 
              "name": "tools/depot_tools/third_party/boto/pyami/helloworld.py", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "```xml\n<message name=\"IDS_HELLO_WORLD_TITLE\" desc=\"A happy message saying hello to the world\">\n  Hello World!\n</message>\n<message name=\"IDS_HELLO_WORLD_WELCOME_TEXT\" desc=\"Message welcoming the user to the hello world page\">\n  Welcome to this fancy Hello World page <ph name=\"WELCOME_NAME\">$1<ex>Chromium User</ex></ph>!\n</message>\n```\nAdd the created file in `components/components_strings.grd`:\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 3, 
                      "end_column": 14
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 86, 
                      "end_column": 97
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 25, 
                      "end_column": 36
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 108, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "bomRc6rjVFY", 
          "best_matching_line_number": 110, 
          "language": "markdown", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "b06c0c165ff22450561f21cf2e01a50ef964a12f", 
              "name": "src/docs/webui_in_components.md", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 4
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "   *\n   * @code\n   *\n   *  char hello_world[] = \"Hello world!\";\n   *  PP_Var hello_var = ppb_var_interface->VarFromUtf8(instance,\n   *                                                    hello_world,\n   *                                                    sizeof(hello_world));\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 29, 
                      "end_column": 40
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 71, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "hkOsIT5UDLA", 
          "best_matching_line_number": 74, 
          "language": "idl", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "aa5c6d769bca19b8c4f392fecde8f19f3eab6d8b", 
              "name": "src/ppapi/api/ppb_messaging.idl", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "   *\n   * The following JavaScript code invokes <code>HandleMessage</code>, passing\n   * the module instance on which it was invoked, with <code>message</code>\n   * being a string <code>PP_Var</code> containing \"Hello world!\"\n   *\n   * <strong>Example:</strong>\n   *\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 53, 
                      "end_column": 64
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 42, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "f9g9PULCDR0", 
          "best_matching_line_number": 45, 
          "language": "idl", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "83c2010382bed71084e34224480f79dd879449cd", 
              "name": "src/ppapi/api/ppp_messaging.idl", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  TestConsoleSub(interface, pp_instance, source, pp::Var(false));\n  TestConsoleSub(interface, pp_instance, source, pp::Var(12345678));\n  TestConsoleSub(interface, pp_instance, source, pp::Var(-0.0));\n  TestConsoleSub(interface, pp_instance, source, pp::Var(\"Hello World!\"));\n  TestConsoleSub(interface, pp_instance, source, pp::VarArray());\n  TestConsoleSub(interface, pp_instance, source, pp::VarArrayBuffer());\n  TestConsoleSub(interface, pp_instance, source, pp::VarDictionary());\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 58, 
                      "end_column": 63
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 58, 
                      "end_column": 66
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 59, 
                      "end_column": 62
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 58, 
                      "end_column": 72
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 59, 
                      "end_column": 70
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 55, 
              "match_reason": {
                "content": true
              }, 
              "scope": "TestConsole::TestSmoke"
            }
          ], 
          "docid": "IE_zAbcDuQI", 
          "best_matching_line_number": 58, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "aa7636f545cd8b717426b233f0e1895fe2c92d3a", 
              "name": "src/ppapi/tests/test_console.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": " * Expose replacement `typeof` detection to the library.\n *\n * ```js\n * if ('string' === lib.of('hello world')) {\n *   // ...\n * }\n * ```\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 8, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 29, 
                      "end_column": 40
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 5656, 
              "match_reason": {
                "content": true
              }, 
              "scope": ""
            }
          ], 
          "docid": "zi_h8hNlFww", 
          "best_matching_line_number": 5659, 
          "language": "javascript", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "431fea3f86d3b660fb5f4f13e48f3f0efa12e4b3", 
              "name": "src/third_party/chaijs/chai.js", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  Local<v8::Promise::Resolver> resolver =\n      v8::Promise::Resolver::New(context).ToLocalChecked();\n  auto result = v8_str(\"hello world\");\n  resolver->Resolve(context, result).ToChecked();\n  return resolver->GetPromise();\n}\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 3, 
                      "end_column": 7
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 24, 
                      "end_column": 37
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 25, 
                      "end_column": 36
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 3, 
                      "end_column": 9
                    }, 
                    "type": 3
                  }
                ]
              }, 
              "first_line_number": 27818, 
              "match_reason": {
                "content": true
              }, 
              "scope": "HostImportModuleDynamicallyCallbackResolve"
            }
          ], 
          "docid": "gHpCSrCHHCQ", 
          "best_matching_line_number": 27820, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "2a90cc8d7375a70ae9356390007c4e02cad89de6", 
              "name": "src/v8/test/cctest/test-api.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "// CFNumberRef some_number = base::mac::CFCast<CFNumberRef>(\n//     CFArrayGetValueAtIndex(array, index));\n//\n// CFTypeRef hello = CFSTR(\"hello world\");\n// CFStringRef some_string = base::mac::CFCastStrict<CFStringRef>(hello);\n\ntemplate<typename T>\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 2, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 3, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 4, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 5, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 29, 
                      "end_column": 40
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 6, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 1, 
                      "end_column": 9
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 10, 
                      "end_column": 18
                    }, 
                    "type": 3
                  }
                ]
              }, 
              "first_line_number": 273, 
              "match_reason": {
                "content": true
              }, 
              "scope": "base::mac"
            }
          ], 
          "docid": "OwqJPQR2_eU", 
          "best_matching_line_number": 276, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "26a2f18bc84ae849f33dc018946d8c5f3fd01f82", 
              "name": "src/base/mac/foundation_util.h", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "Usage:\n    from extern import FP\n    print 'Fingerprint is %ld' % FP.FingerPrint('Hello world!')\n\"\"\"\n\n\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 4, 
                      "start_column": 1, 
                      "end_column": 4
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 50, 
                      "end_column": 61
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 16, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "A13ScR9BhvA", 
          "best_matching_line_number": 18, 
          "language": "python", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "3bde18dcfccf60f70959c56b8882d1c1d4f5f460", 
              "name": "src/tools/grit/grit/extern/FP.py", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "a simple \"Hello World\" HTML page:\n\n   #!/usr/local/bin/perl -w\n   use CGI;                             # load CGI routines\n   $q = CGI->new;                        # create new CGI object\n   print $q->header,                    # create the HTTP header\n         $q->start_html('hello world'), # start the HTML\n         $q->h1('hello world'),         # level 1 header\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 10, 
                      "end_column": 23
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 11, 
                      "end_column": 22
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 4, 
                      "start_column": 4, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 4, 
                      "end_column": 7
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 5, 
                      "start_column": 41, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 6, 
                      "start_column": 42, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 4, 
                      "end_column": 9
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 7, 
                      "start_column": 41, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 25, 
                      "end_column": 38
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 26, 
                      "end_column": 37
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 8, 
                      "start_column": 41, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 8, 
                      "end_line": 8, 
                      "start_column": 17, 
                      "end_column": 30
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 8, 
                      "end_line": 8, 
                      "start_column": 18, 
                      "end_column": 29
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 8, 
                      "end_line": 9, 
                      "start_column": 41, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }
                ]
              }, 
              "first_line_number": 4332, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "Yrw7LKCrDtk", 
          "best_matching_line_number": 4332, 
          "language": "perl", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "6084f0f89e984925f478517805c322753e164654", 
              "name": "src/third_party/perl/perl/lib/CGI.pm", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 6
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": " * found in the LICENSE file.\n */\n\n// This is a simple OpenCL Hello World that tests you have a functioning OpenCL setup.\n\n#include <CL/cl.hpp>\n#include <initializer_list>\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 2, 
                      "start_column": 1, 
                      "end_column": 4
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 5, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 28, 
                      "end_column": 39
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 1, 
                      "end_column": 9
                    }, 
                    "type": 7
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 1, 
                      "end_column": 9
                    }, 
                    "type": 7
                  }
                ]
              }, 
              "first_line_number": 5, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "NlSJgDYENQI", 
          "best_matching_line_number": 8, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "7e57f0b977755c4cfd20764356c68d5b45ab2678", 
              "name": "src/third_party/skia/tools/hello-opencl.cpp", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "    .. sourcecode:: jinja\n\n        {{ \"Hello World\"|replace(\"Hello\", \"Goodbye\") }}\n            -> Goodbye World\n\n        {{ \"aaaaargh\"|replace(\"a\", \"d'oh, \", 2) }}\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 7, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 13, 
                      "end_column": 24
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 123, 
              "match_reason": {
                "content": true
              }, 
              "scope": "do_replace"
            }
          ], 
          "docid": "Clwz8A1AjLo", 
          "best_matching_line_number": 125, 
          "language": "python", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "267ddddaa03478ed77d640c011b8f2c0d6641d04", 
              "name": "src/third_party/jinja2/filters.py", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "    ${$cpt->varglob('foo')} = \"Hello world\";\n\nhas the same effect as:\n\n    $cpt = new Safe 'Root';\n    $Root::foo = \"Hello world\";\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 21, 
                      "end_column": 26
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 31, 
                      "end_column": 44
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 32, 
                      "end_column": 43
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 21, 
                      "end_column": 27
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 18, 
                      "end_column": 31
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 19, 
                      "end_column": 30
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 633, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "hq3Y1iiLVvQ", 
          "best_matching_line_number": 633, 
          "language": "perl", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "cd6586cca6ee95f0b5de3845c10bce4b8ebad688", 
              "name": "src/third_party/perl/perl/lib/Safe.pm", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "TEST(IPCMessageTest, BasicMessageTest) {\n  int v1 = 10;\n  std::string v2(\"foobar\");\n  base::string16 v3(base::ASCIIToUTF16(\"hello world\"));\n\n  IPC::Message m(0, 1, IPC::Message::PRIORITY_NORMAL);\n  m.WriteInt(v1);\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 3, 
                      "end_column": 6
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 12, 
                      "end_column": 14
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 18, 
                      "end_column": 26
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 40, 
                      "end_column": 53
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 41, 
                      "end_column": 52
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 18, 
                      "end_column": 19
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 21, 
                      "end_column": 22
                    }, 
                    "type": 6
                  }
                ]
              }, 
              "first_line_number": 37, 
              "match_reason": {
                "content": true
              }, 
              "scope": "IPC"
            }
          ], 
          "docid": "0dl24zkiZEs", 
          "best_matching_line_number": 40, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "5d9da31715a36115e5f1ea055c583bc05f97400c", 
              "name": "src/ipc/ipc_message_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "#include \"main.h\"\n\nint main(void) {\n  printf(\"hello world\\n\");\n  return 0;\n}\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 1, 
                      "end_column": 9
                    }, 
                    "type": 7
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 10, 
                      "end_column": 18
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 1, 
                      "end_column": 4
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 10, 
                      "end_column": 14
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 10, 
                      "end_column": 25
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 11, 
                      "end_column": 22
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 3, 
                      "end_column": 9
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 10, 
                      "end_column": 11
                    }, 
                    "type": 6
                  }
                ]
              }, 
              "first_line_number": 7, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "I6Dg9n-9sEY", 
          "best_matching_line_number": 10, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "3b9a705c2434445ac50a1ddd2b56e69673636b09", 
              "name": "src/tools/gyp/test/make/main.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "      true,\n      \"text/plain\",\n      \"US-ASCII\",\n      \"hello world\" },\n\n    // Allow invalid mediatype for backward compatibility but set mime_type to\n    // \"text/plain\" instead of the invalid mediatype.\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 7, 
                      "end_column": 11
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 7, 
                      "end_column": 19
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 7, 
                      "end_column": 17
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 7, 
                      "end_column": 20
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 8, 
                      "end_column": 19
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 7, 
                      "start_column": 5, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 8, 
                      "start_column": 5, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }
                ]
              }, 
              "first_line_number": 62, 
              "match_reason": {
                "content": true
              }, 
              "scope": "net::DataURLTest_Parse"
            }
          ], 
          "docid": "Gk40LAtOjto", 
          "best_matching_line_number": 65, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "2b3669ab9eef163605846f7f3cbe678cae01313c", 
              "name": "src/net/base/data_url_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 7
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "def main():\n  print('Hello world: ' + sys.argv[1])\n  if len(sys.argv) == 3:\n    # Write a file in ${ISOLATED_OUTDIR}.\n    p = os.path.join(sys.argv[2].decode('utf-8'), u'da &#128163;.txt').encode('utf-8')\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 1, 
                      "end_column": 4
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 3, 
                      "end_column": 8
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 9, 
                      "end_column": 24
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 10, 
                      "end_column": 21
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 36, 
                      "end_column": 37
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 3, 
                      "end_column": 5
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 23, 
                      "end_column": 24
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 1, 
                      "end_column": 42
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 31, 
                      "end_column": 32
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 41, 
                      "end_column": 48
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 51, 
                      "end_column": 62
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 71, 
                      "end_column": 78
                    }, 
                    "type": 4
                  }
                ]
              }, 
              "first_line_number": 13, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "sxMQ2DU6B3c", 
          "best_matching_line_number": 14, 
          "language": "python", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "1978088c825d9956d5cccd22dee2c2157b4329ab", 
              "name": "infra/luci/client/example/payload/hello_&#127760;.py", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "TEST_P(RenderTextTest, StringSizeSanity) {\n  RenderText* render_text = GetRenderText();\n  render_text->SetText(UTF8ToUTF16(\"Hello World\"));\n  const Size string_size = render_text->GetStringSize();\n  EXPECT_GT(string_size.width(), 0);\n  EXPECT_GT(string_size.height(), 0);\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 36, 
                      "end_column": 49
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 37, 
                      "end_column": 48
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 3, 
                      "end_column": 8
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 34, 
                      "end_column": 35
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 35, 
                      "end_column": 36
                    }, 
                    "type": 6
                  }
                ]
              }, 
              "first_line_number": 2437, 
              "match_reason": {
                "content": true
              }, 
              "scope": "gfx"
            }
          ], 
          "docid": "wKCj11JSyHA", 
          "best_matching_line_number": 2439, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "4118434269f03477d81c77c0ac4a087e52d7f4ad", 
              "name": "src/ui/gfx/render_text_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 10
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "DEPS = ['recipe_engine/step']\n\ndef RunSteps(api):\n  api.step('Print Hello World', ['echo', 'hello', 'world'])\n\ndef GenTests(api):\n  return ()\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 19, 
                      "end_column": 30
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 43, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "H0bWtIpeuyE", 
          "best_matching_line_number": 46, 
          "language": "markdown", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "c81ed8d3f93a5c6c2bedc5c3e9cb7ba67325b08c", 
              "name": "infra/recipes-py/doc/user_guide.md", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 7
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "\"Hello world\", but the field is narrow, so \"Hello\" is on the first line and\n\"World\" is on the second line. Internally Chromium's accessibility tree\nmight look like this:\n\n```\nstaticText location=(8, 8) size=(38, 36) name='Hello world'\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 2, 
                      "end_column": 13
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 48, 
                      "end_column": 59
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 363, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "vulXlTXFcB8", 
          "best_matching_line_number": 363, 
          "language": "markdown", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "67cf8e1c6759f9aac6b47c1f942958e6876b8308", 
              "name": "src/docs/accessibility/overview.md", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": " */\n\n/*\n * NaCl test for simple hello world not using newlib\n */\n\n#include \"barebones.h\"\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 1, 
                      "end_column": 4
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 5, 
                      "start_column": 1, 
                      "end_column": 4
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 25, 
                      "end_column": 36
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 1, 
                      "end_column": 9
                    }, 
                    "type": 7
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 10, 
                      "end_column": 23
                    }, 
                    "type": 4
                  }
                ]
              }, 
              "first_line_number": 5, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "KbHnqBMvdzA", 
          "best_matching_line_number": 8, 
          "language": "c", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "31b528f81d0433460c8e8628a4ab714036772a0a", 
              "name": "src/native_client/tests/barebones/barebones_hello_world.c", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "      g.AddStringDescriptor(0, 'Hello world!')\n\n  def test_language_id_out_of_range(self):\n    g = gadget.Gadget(device_desc, fs_config_desc, hs_config_desc)\n    with self.assertRaisesRegexp(ValueError, 'language code out of range'):\n      g.AddStringDescriptor(1, 'Hello world!', lang=-1)\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 29, 
                      "end_column": 30
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 32, 
                      "end_column": 46
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 33, 
                      "end_column": 44
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 3, 
                      "end_column": 6
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 5, 
                      "end_column": 9
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 46, 
                      "end_column": 74
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 29, 
                      "end_column": 30
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 32, 
                      "end_column": 46
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 33, 
                      "end_column": 44
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 54, 
                      "end_column": 55
                    }, 
                    "type": 6
                  }
                ]
              }, 
              "first_line_number": 152, 
              "match_reason": {
                "content": true
              }, 
              "scope": "GadgetTest.test_string_index_out_of_range"
            }
          ], 
          "docid": "lugDs085Nmc", 
          "best_matching_line_number": 152, 
          "language": "python", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "2440983baefc165a3bb44639f73f58656a6114b6", 
              "name": "src/tools/usb_gadget/gadget_test.py", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 13
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "      FILE_PATH_LITERAL(\"wrapper --foo='hello world' --bar=\\\"let's go\\\"\"));\n\n  EXPECT_EQ(6u, cl.argv().size());\n  EXPECT_EQ(FILE_PATH_LITERAL(\"wrapper\"), cl.argv()[0]);\n  EXPECT_EQ(FILE_PATH_LITERAL(\"--foo='hello world'\"), cl.argv()[1]);\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 25, 
                      "end_column": 73
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 41, 
                      "end_column": 52
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 13, 
                      "end_column": 14
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 31, 
                      "end_column": 40
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 53, 
                      "end_column": 54
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 31, 
                      "end_column": 52
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 39, 
                      "end_column": 50
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 65, 
                      "end_column": 66
                    }, 
                    "type": 6
                  }
                ]
              }, 
              "first_line_number": 429, 
              "match_reason": {
                "content": true
              }, 
              "scope": "base::CommandLineTest_PrependComplexWrapper"
            }
          ], 
          "docid": "burFRwjdP6M", 
          "best_matching_line_number": 429, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "3718cd999c40c69ad9dbc90c516449523d4de6f2", 
              "name": "src/base/command_line_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "STRINGTABLE \nBEGIN\n    IDS_SIMPLE              \"Hello World!\"\n    IDS_PLACEHOLDERS        \"Hello, $1. Your number is $2.\"\n    IDS_PLACEHOLDERS_2      \"You owe me $$$1.\"\n    IDS_PLACEHOLDERS_3      \"Hello, $2. Your number is $1.\"\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 30, 
                      "end_column": 41
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 59, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "3LpXktzApaY", 
          "best_matching_line_number": 61, 
          "language": "", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "bacb974db81f87f3395efbe49eb335f273290223", 
              "name": "src/chrome/test/data/resource.rc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  my $Document = PPI::Document->new;\n  \n  # Create a document from source\n  $Document = PPI::Document->new(\\'print \"Hello World!\\n\"');\n  \n  # Load a Document from a file\n  $Document = PPI::Document->new('Module.pm');\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 3, 
                      "end_column": 5
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 4, 
                      "start_column": 3, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 35, 
                      "end_column": 59
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 43, 
                      "end_column": 54
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 7, 
                      "start_column": 3, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 34, 
                      "end_column": 45
                    }, 
                    "type": 4
                  }
                ]
              }, 
              "first_line_number": 53, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "Lp3nnX3AgB0", 
          "best_matching_line_number": 56, 
          "language": "perl", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "571de1e0a5574d6c588b87d7ef0984d3f93126da", 
              "name": "src/third_party/perl/perl/vendor/lib/PPI.pm", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 4
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "namespace {\n\nconst char kTestFilename[] = \"testfile.txt\";\nconst char kTestString[] = \"Hello world!\";\nconst bool kTestBool = true;\nconst int32_t kTestInt = 42;\nconst double kTestDouble = 42.0;\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 1, 
                      "end_column": 10
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 1, 
                      "end_column": 6
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 7, 
                      "end_column": 11
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 30, 
                      "end_column": 44
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 1, 
                      "end_column": 6
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 7, 
                      "end_column": 11
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 28, 
                      "end_column": 42
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 29, 
                      "end_column": 40
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 1, 
                      "end_column": 6
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 7, 
                      "end_column": 11
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 24, 
                      "end_column": 28
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 1, 
                      "end_column": 6
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 26, 
                      "end_column": 28
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 1, 
                      "end_column": 6
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 7, 
                      "end_column": 13
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 28, 
                      "end_column": 32
                    }, 
                    "type": 6
                  }
                ]
              }, 
              "first_line_number": 35, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "8qOfmOIoaRk", 
          "best_matching_line_number": 38, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "1004490465cbbf426841dc821cee009010a60488", 
              "name": "src/ppapi/tests/test_post_message.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "}\n\nTEST(HttpUtilTest, HeadersIterator) {\n  std::string headers = \"foo: 1\\t\\r\\nbar: hello world\\r\\nbaz: 3 \\r\\n\";\n\n  HttpUtil::HeadersIterator it(headers.begin(), headers.end(), \"\\r\\n\");\n\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 25, 
                      "end_column": 70
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 43, 
                      "end_column": 54
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 64, 
                      "end_column": 70
                    }, 
                    "type": 4
                  }
                ]
              }, 
              "first_line_number": 101, 
              "match_reason": {
                "content": true
              }, 
              "scope": "net::HttpUtilTest_IsSafeHeader"
            }
          ], 
          "docid": "G1DVe1S_m9o", 
          "best_matching_line_number": 104, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "ec4e6d108d031a0ce475a5f6727f0d9865e73577", 
              "name": "src/net/http/http_util_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 3
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "    ]\n    nmfflags = [\n      \"-xtest_file:test_file.txt\",\n      \"-xnmf says hello world:test_file.txt\",\n\n      # There is no dummy_test_file.txt file intentionally. This is just for\n      # a test case where there is a manifest entry, but no actual file.\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 7, 
                      "end_column": 34
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 7, 
                      "end_column": 45
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 19, 
                      "end_column": 30
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 7, 
                      "start_column": 7, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 8, 
                      "start_column": 7, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }
                ]
              }, 
              "first_line_number": 155, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "pYVoW8GKZNw", 
          "best_matching_line_number": 158, 
          "language": "gn", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "2c14fa357546c946495a3be2c0f47ff711fcfb50", 
              "name": "src/chrome/test/data/nacl/BUILD.gn", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  // A very simple label example, followed by additional helpful examples.\n  container->SetLayoutManager(\n      std::make_unique<BoxLayout>(BoxLayout::kVertical, gfx::Insets(), 10));\n  Label* label = new Label(ASCIIToUTF16(\"Hello world!\"));\n  container->AddChildView(label);\n\n  const wchar_t hello_world_hebrew[] =\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 2, 
                      "start_column": 3, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 72, 
                      "end_column": 74
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 18, 
                      "end_column": 21
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 41, 
                      "end_column": 55
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 42, 
                      "end_column": 53
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 3, 
                      "end_column": 8
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 9, 
                      "end_column": 16
                    }, 
                    "type": 3
                  }
                ]
              }, 
              "first_line_number": 75, 
              "match_reason": {
                "content": true
              }, 
              "scope": "views::examples::LabelExample::CreateExampleView"
            }
          ], 
          "docid": "8lHXzg_9op4", 
          "best_matching_line_number": 78, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "4af92326d72d87986f8cf6d1811ca0aa72f1c75c", 
              "name": "src/ui/views/examples/label_example.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "Hello world\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 1, 
                      "end_column": 12
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 1, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "K3r08gd7gCw", 
          "best_matching_line_number": 1, 
          "language": "", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "802992c4220de19a90767f3000a79a31b98d0df7", 
              "name": "src/native_client/tests/libc_free_hello_world/libc_free_hello_world.stdout", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "}\n\nTEST_P(SharedMemoryTest, GetReadOnlyHandle) {\n  StringPiece contents = \"Hello World\";\n\n  SharedMemory writable_shmem;\n  SharedMemoryCreateOptions options;\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 26, 
                      "end_column": 39
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 27, 
                      "end_column": 38
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 362, 
              "match_reason": {
                "content": true
              }, 
              "scope": "base::SharedMemoryTest_AnonymousPrivate"
            }
          ], 
          "docid": "YpLMrQrbqcI", 
          "best_matching_line_number": 365, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "e3a271b33ccb4e8aba8b25187995cc0fb962b8d5", 
              "name": "src/base/memory/shared_memory_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 3
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "class HelloWorld(ScriptBase):\n\n    def main(self):\n        self.log('Hello World!!!')\n        \n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 1, 
                      "end_column": 6
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 5, 
                      "end_column": 8
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 18, 
                      "end_column": 34
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 19, 
                      "end_column": 30
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 24, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "MWj5PCpznnY", 
          "best_matching_line_number": 27, 
          "language": "python", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "680873ce179ee8c78af1cd9ecc8fbeb8d4983b57", 
              "name": "src/third_party/depot_tools/third_party/boto/pyami/helloworld.py", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "};\n\nTEST_F(JSONParserTest, NextChar) {\n  std::string input(\"Hello world\");\n  std::unique_ptr<JSONParser> parser(NewTestParser(input));\n\n  EXPECT_EQ('H', *parser->pos());\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 21, 
                      "end_column": 34
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 22, 
                      "end_column": 33
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 13, 
                      "end_column": 16
                    }, 
                    "type": 4
                  }
                ]
              }, 
              "first_line_number": 50, 
              "match_reason": {
                "content": true
              }, 
              "scope": "base::internal::JSONParserTest"
            }
          ], 
          "docid": "W5Qt0pGFKxg", 
          "best_matching_line_number": 53, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "0da3db849ede7f2f64034e84cb71cc46caa7b509", 
              "name": "src/base/json/json_parser_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "    type.setTextSize(24);\n    sk_tool_utils::set_portable_typeface(&type);\n    type.setColor(color);\n    const char text[] = \"HELLO WORLD\";\n    canvas->drawString(text, 32, size / 2 + Y, type);\n    SkScalar lineSpacing = type.getFontSpacing();\n    exercise_draw_pos_text(canvas, text, 32, size / 2 + Y + lineSpacing, type);\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 22, 
                      "end_column": 24
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 5, 
                      "end_column": 10
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 11, 
                      "end_column": 15
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 25, 
                      "end_column": 38
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 26, 
                      "end_column": 37
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 30, 
                      "end_column": 32
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 41, 
                      "end_column": 42
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 42, 
                      "end_column": 44
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 53, 
                      "end_column": 54
                    }, 
                    "type": 6
                  }
                ]
              }, 
              "first_line_number": 65, 
              "match_reason": {
                "content": true
              }, 
              "scope": "test_text"
            }
          ], 
          "docid": "TsVzatAuMsI", 
          "best_matching_line_number": 68, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "91c0a1665ef38253f95270e3556a2e8f397b1cbd", 
              "name": "src/third_party/skia/gm/skbug_257.cpp", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "// class Foo {\n//  public:\n//   Foo() {\n//     GPU_CLIENT_LOG(\"[\" << LogPrefix() << \"] Hello world\");\n//     GPU_CLIENT_LOG_CODE_BLOCK({\n//       for (int i = 0; i < 10; ++i) {\n//         GPU_CLIENT_LOG_CODE_BLOCK(\"Hello again\");\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 2, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 3, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 4, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 5, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 48, 
                      "end_column": 59
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 6, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 7, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 8, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }
                ]
              }, 
              "first_line_number": 18, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "CcLJbeIUKVY", 
          "best_matching_line_number": 21, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "a56e75cc8499940a5158e2a5ca843f8817d042ff", 
              "name": "src/gpu/command_buffer/client/logging.h", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "// Flags: --opt --no-always-opt\n\n(function() {\n  var o = { text: \"Hello World!\" };\n  function A() {\n    // Assign twice to make the field non-constant.\n    // TODO(ishell): update test once constant field tracking is done.\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 1, 
                      "end_column": 3
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 3, 
                      "end_column": 32
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 2, 
                      "end_column": 10
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 3, 
                      "end_column": 6
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 19, 
                      "end_column": 33
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 20, 
                      "end_column": 31
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 3, 
                      "end_column": 11
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 5, 
                      "end_column": 7
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 7, 
                      "end_column": 52
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 5, 
                      "end_column": 7
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 7, 
                      "end_column": 71
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 8, 
                      "end_column": 12
                    }, 
                    "type": 14
                  }
                ]
              }, 
              "first_line_number": 6, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "vwECZW-uZBA", 
          "best_matching_line_number": 9, 
          "language": "javascript", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "2e0cb8bd6fa00e7f52ea1138edc9a733db8113d1", 
              "name": "src/v8/test/mjsunit/field-type-tracking.js", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  printf(\"Hello world (1)\\n\");\n  fflush(NULL);\n  if (-1 == (rv = dup(1))) {\n    fprintf(stderr, \"dup(1) returned unexpected result: %d\\n\", rv);\n  }\n  alt = fdopen(rv, \"w\");\n  fprintf(alt, \"Hello world (dup)\\n\");\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 10, 
                      "end_column": 29
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 11, 
                      "end_column": 22
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 3, 
                      "end_column": 5
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 8, 
                      "end_column": 9
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 23, 
                      "end_column": 24
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 21, 
                      "end_column": 62
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 20, 
                      "end_column": 23
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 16, 
                      "end_column": 37
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 17, 
                      "end_column": 28
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 19, 
              "match_reason": {
                "content": true
              }, 
              "scope": "main"
            }
          ], 
          "docid": "PJGgWdBngr8", 
          "best_matching_line_number": 19, 
          "language": "c", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "a68d5ee6689067ba4c72dd35f2050f1fbdf2cb14", 
              "name": "src/native_client/tests/dup/dup_test.c", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "#!/usr/bin/env python\n\nprint 'Hello World'\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 1, 
                      "end_column": 22
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 1, 
                      "end_column": 6
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 7, 
                      "end_column": 20
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 8, 
                      "end_column": 19
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 1, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "84shkdgYT4I", 
          "best_matching_line_number": 3, 
          "language": "python", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "310a98192cbad7fd33e74d658ec56a10f04e817c", 
              "name": "src/tools/gyp/test/determinism/rule.py", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "// TODO(beng): disabled until app strings move to app.\nTEST_F(L10nUtilTest, DISABLED_GetString) {\n  std::string s = l10n_util::GetStringUTF8(IDS_SIMPLE);\n  EXPECT_EQ(std::string(\"Hello World!\"), s);\n\n  s = l10n_util::GetStringFUTF8(IDS_PLACEHOLDERS,\n                                UTF8ToUTF16(\"chrome\"),\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 2, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 4, 
                      "end_column": 8
                    }, 
                    "type": 14
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 25, 
                      "end_column": 39
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 26, 
                      "end_column": 37
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 45, 
                      "end_column": 53
                    }, 
                    "type": 4
                  }
                ]
              }, 
              "first_line_number": 58, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "vPHGPNYmFxM", 
          "best_matching_line_number": 61, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "607d9872f909d620d29cc3d24b16150316a26edd", 
              "name": "src/ui/base/l10n/l10n_util_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "//\n// Example usage:\n//  FakeURLFetcher fake_fetcher(\"http://a.com\", some_delegate,\n//                              \"<html><body>hello world</body></html>\",\n//                              HTTP_OK);\n//\n// // Will schedule a call to some_delegate->OnURLFetchComplete(&fake_fetcher).\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 2, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 3, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 4, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 5, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 46, 
                      "end_column": 57
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 6, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 7, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 8, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }
                ]
              }, 
              "first_line_number": 298, 
              "match_reason": {
                "content": true
              }, 
              "scope": "net"
            }
          ], 
          "docid": "3jZmc7YkKkc", 
          "best_matching_line_number": 301, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "e85d322ed71c0f8dcb4559108661b7aeb918f034", 
              "name": "src/net/url_request/test_url_fetcher_factory.h", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "export var w = 41;\nexport let x = 42;\nexport class y {};\nexport const z = \"hello world\";\n\nassertTrue(check());\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 8, 
                      "end_column": 11
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 16, 
                      "end_column": 18
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 8, 
                      "end_column": 11
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 16, 
                      "end_column": 18
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 8, 
                      "end_column": 13
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 8, 
                      "end_column": 13
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 18, 
                      "end_column": 31
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 19, 
                      "end_column": 30
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 20, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "4KOFIKiUEZs", 
          "best_matching_line_number": 23, 
          "language": "javascript", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "e8b46106f7e9cea0282bfbeff2ea9e0a9f637e1a", 
              "name": "src/v8/test/mjsunit/modules-init3.js", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "                             vendor_id=0, product_id=0)\n    chip = mock.Mock()\n    g.Connected(chip, usb_constants.Speed.HIGH)\n    g.SendReport(0, 'Hello world!')\n    chip.SendPacket.assert_called_once_with(0x81, 'Hello world!')\n\n  def test_send_multiple_reports(self):\n    g = hid_gadget.HidGadget(report_desc=report_desc, features={},\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 40, 
                      "end_column": 41
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 54, 
                      "end_column": 55
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 18, 
                      "end_column": 19
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 21, 
                      "end_column": 35
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 22, 
                      "end_column": 33
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 45, 
                      "end_column": 49
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 51, 
                      "end_column": 65
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 52, 
                      "end_column": 63
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 3, 
                      "end_column": 6
                    }, 
                    "type": 3
                  }
                ]
              }, 
              "first_line_number": 94, 
              "match_reason": {
                "content": true
              }, 
              "scope": "HidGadgetTest.test_send_report_zero"
            }
          ], 
          "docid": "IFd83NkKsTA", 
          "best_matching_line_number": 97, 
          "language": "python", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "f0a6a29185b7a5089c6155e55ebbbd696c32d580", 
              "name": "src/tools/usb_gadget/hid_gadget_test.py", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 5
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "}\n\nstd::string TestFlashClipboard::TestReadWritePlainText() {\n  std::string input = \"Hello world plain text!\";\n  ASSERT_TRUE(WriteStringVar(PP_FLASH_CLIPBOARD_FORMAT_PLAINTEXT, input));\n  ASSERT_TRUE(IsFormatAvailableMatches(PP_FLASH_CLIPBOARD_FORMAT_PLAINTEXT,\n                                       true));\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 23, 
                      "end_column": 48
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 24, 
                      "end_column": 35
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 40, 
                      "end_column": 44
                    }, 
                    "type": 3
                  }
                ]
              }, 
              "first_line_number": 128, 
              "match_reason": {
                "content": true
              }, 
              "scope": "TestFlashClipboard::GetSequenceNumber"
            }
          ], 
          "docid": "LMdMkA35Zcc", 
          "best_matching_line_number": 131, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "e94cb7fb13ffa3b1a6ab44189318133ac094fd2c", 
              "name": "src/ppapi/tests/test_flash_clipboard.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 3
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "* Who do I contact to if I have more questions?\n* Does it have SLA?\n\nSee [Hello World Service](hello_world.md) as an example.\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 6, 
                      "end_column": 17
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 17, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "PvLK3gr9zFI", 
          "best_matching_line_number": 20, 
          "language": "markdown", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "c5b473f6c4a4b76f33c99b7ef83e15d4c0197282", 
              "name": "infra/doc/users/services/documenting.md", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "If it's a scalar ref, the child reads input from or sends output to\nthat variable:\n\n   $in = \"Hello World.\\n\";\n   run \\@cat, \\$in, \\$out;\n   print $out;\n\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 11, 
                      "end_column": 17
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 18, 
                      "end_column": 21
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 10, 
                      "end_column": 26
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 11, 
                      "end_column": 22
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 4, 
                      "end_column": 9
                    }, 
                    "type": 3
                  }
                ]
              }, 
              "first_line_number": 519, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "sfSXfuKp7D4", 
          "best_matching_line_number": 522, 
          "language": "perl", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "fcb1927625168ad0ecd472c83f8bcb6b1a038a11", 
              "name": "src/third_party/perl/perl/vendor/lib/IPC/Run.pm", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 4
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "=begin testing process after new 15\n\nmy $doc1 = PPI::Document->new(\\'print \"Hello World!\\n\";');\nisa_ok( $doc1, 'PPI::Document' );\nmy $doc2 = \\'print \"Hello World!\\n\";';\nmy $doc3 = \\' print  \"Hello World!\\n\"; # comment';\nmy $doc4 = \\'print \"Hello World!\\n\"';\n\n# Normalize them at level 1\nmy $layer1 = PPI::Normal->new(1);\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 34, 
                      "end_column": 36
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 1, 
                      "end_column": 3
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 32, 
                      "end_column": 57
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 40, 
                      "end_column": 51
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 16, 
                      "end_column": 31
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 1, 
                      "end_column": 3
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 13, 
                      "end_column": 38
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 21, 
                      "end_column": 32
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 1, 
                      "end_column": 3
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 13, 
                      "end_column": 50
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 23, 
                      "end_column": 34
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 1, 
                      "end_column": 3
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 13, 
                      "end_column": 37
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 21, 
                      "end_column": 32
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 9, 
                      "end_line": 10, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 10, 
                      "end_line": 10, 
                      "start_column": 1, 
                      "end_column": 3
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 10, 
                      "end_line": 10, 
                      "start_column": 31, 
                      "end_column": 32
                    }, 
                    "type": 6
                  }
                ]
              }, 
              "first_line_number": 200, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "WPjGIS9wulY", 
          "best_matching_line_number": 202, 
          "language": "perl", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "80600b5c42483f7bbf6c074022798a1ef32ef9c9", 
              "name": "src/third_party/perl/perl/vendor/lib/PPI/Normal.pm", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 4
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "    $foo = dualvar 10, \"Hello\";\n    $num = $foo + 2;                    # 12\n    $str = $foo . \" world\";             # Hello world\n\n=item isvstring EXPR\n\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 20, 
                      "end_column": 22
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 24, 
                      "end_column": 31
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 19, 
                      "end_column": 20
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 3, 
                      "start_column": 41, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 19, 
                      "end_column": 27
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 4, 
                      "start_column": 41, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 43, 
                      "end_column": 54
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 89, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "cM50jdDa0IY", 
          "best_matching_line_number": 91, 
          "language": "perl", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "ab97fe5446bbeb86901a092982d02939e1adc28c", 
              "name": "src/third_party/perl/perl/lib/Scalar/Util.pm", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "void UDPSocketTest::ConnectTest(bool use_nonblocking_io) {\n  const uint16_t kPort = 9999;\n  std::string simple_message(\"hello world!\");\n\n  // Setup the server to listen.\n  IPEndPoint server_address(IPAddress::IPv4Localhost(), kPort);\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 1, 
                      "end_column": 5
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 33, 
                      "end_column": 37
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 3, 
                      "end_column": 8
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 26, 
                      "end_column": 30
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 30, 
                      "end_column": 44
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 31, 
                      "end_column": 42
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 6, 
                      "start_column": 3, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }
                ]
              }, 
              "first_line_number": 140, 
              "match_reason": {
                "content": true
              }, 
              "scope": "net::<anonymous>"
            }
          ], 
          "docid": "DjMjo-IOHjI", 
          "best_matching_line_number": 142, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "d7884dbd0ac4c764c05d9e583db83f1730ff7cbf", 
              "name": "src/net/socket/udp_socket_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 5
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  std::unique_ptr<Value> root = JSONReader().ReadToValue(\"\\\"hello world\\\"\");\n  ASSERT_TRUE(root);\n  EXPECT_TRUE(root->is_string());\n  std::string str_val;\n  EXPECT_TRUE(root->GetAsString(&str_val));\n  EXPECT_EQ(\"hello world\", str_val);\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 58, 
                      "end_column": 75
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 61, 
                      "end_column": 72
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 13, 
                      "end_column": 26
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 14, 
                      "end_column": 25
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 202, 
              "match_reason": {
                "content": true
              }, 
              "scope": "base::JSONReader_SimpleString"
            }
          ], 
          "docid": "2mSzIKu5XG0", 
          "best_matching_line_number": 202, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "faaf43ebdb8125ef9e6d30bdca31afa45960ef12", 
              "name": "src/base/json/json_reader_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "def main():\n  print('Hello world: ' + sys.argv[1])\n  if len(sys.argv) == 3:\n    # Write a file in ${ISOLATED_OUTDIR}.\n    p = os.path.join(sys.argv[2].decode('utf-8'), u'da &#128163;.txt').encode('utf-8')\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 1, 
                      "end_column": 4
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 3, 
                      "end_column": 8
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 9, 
                      "end_column": 24
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 10, 
                      "end_column": 21
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 36, 
                      "end_column": 37
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 3, 
                      "end_column": 5
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 23, 
                      "end_column": 24
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 1, 
                      "end_column": 42
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 31, 
                      "end_column": 32
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 41, 
                      "end_column": 48
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 51, 
                      "end_column": 62
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 71, 
                      "end_column": 78
                    }, 
                    "type": 4
                  }
                ]
              }, 
              "first_line_number": 13, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "Lj_CjcpwAJ4", 
          "best_matching_line_number": 14, 
          "language": "python", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "1978088c825d9956d5cccd22dee2c2157b4329ab", 
              "name": "src/tools/swarming_client/example/payload/hello_&#127760;.py", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  base::string16 expected(base::WideToUTF16(L\"HELLO WORLD\"));\n  ASSERT_TRUE(ToUpper(in, &out));\n  ASSERT_EQ(expected, out);\n}\n\nTEST(NetStringUtilTest, ToUpperAlreadyUpper) {\n  base::string16 in(base::WideToUTF16(L\"HELLO WORLD\"));\n  base::string16 out;\n  base::string16 expected(base::WideToUTF16(L\"HELLO WORLD\"));\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 46, 
                      "end_column": 59
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 47, 
                      "end_column": 58
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 40, 
                      "end_column": 53
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 41, 
                      "end_column": 52
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 9, 
                      "end_line": 9, 
                      "start_column": 46, 
                      "end_column": 59
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 9, 
                      "end_line": 9, 
                      "start_column": 47, 
                      "end_column": 58
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 32, 
              "match_reason": {
                "content": true
              }, 
              "scope": "net::NetStringUtilTest_ToUpperSimple"
            }
          ], 
          "docid": "2p65pvEcDsk", 
          "best_matching_line_number": 32, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "c37ef9edfd14c66371f90c25f4b1a89104b3cde7", 
              "name": "src/net/base/net_string_util_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 4
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "    chip = mock.Mock()\n    g.Connected(chip, usb_constants.Speed.HIGH)\n    g.SetConfiguration(1)\n    g.ReceivePacket(0x02, 'Hello world!')\n    chip.SendPacket.assert_called_once_with(0x82, 'Hello world!')\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 24, 
                      "end_column": 25
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 21, 
                      "end_column": 25
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 27, 
                      "end_column": 41
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 28, 
                      "end_column": 39
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 45, 
                      "end_column": 49
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 51, 
                      "end_column": 65
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 52, 
                      "end_column": 63
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 18, 
              "match_reason": {
                "content": true
              }, 
              "scope": "EchoGadgetTest.test_bulk_echo"
            }
          ], 
          "docid": "PgmwEWZnVJk", 
          "best_matching_line_number": 21, 
          "language": "python", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "a25d68cb233260144e4e3ede93adc0857b8bd69c", 
              "name": "src/tools/usb_gadget/echo_gadget_test.py", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "to use.\n\n    [% BLOCK hello %]\n       Hello World\n    [% END %]\n\n    [% INCLUDE hello %]\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 4, 
                      "end_column": 7
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 8, 
                      "end_column": 19
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 738, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "6djrw35ibWc", 
          "best_matching_line_number": 741, 
          "language": "perl", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "1cce292f039b4181ee8e5e7f6246d22d8500b08a", 
              "name": "src/third_party/perl/perl/vendor/lib/Template.pm", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "    .. sourcecode:: jinja\n\n        {{ \"Hello World\"|replace(\"Hello\", \"Goodbye\") }}\n            -> Goodbye World\n\n        {{ \"aaaaargh\"|replace(\"a\", \"d'oh, \", 2) }}\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 7, 
                      "start_column": 1, 
                      "end_column": 1
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 13, 
                      "end_column": 24
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 108, 
              "match_reason": {
                "content": true
              }, 
              "scope": "do_replace"
            }
          ], 
          "docid": "xCgwYY2vcDM", 
          "best_matching_line_number": 110, 
          "language": "python", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "fd0db04aa41026500910347cf401fe620c556188", 
              "name": "build/third_party/jinja2/jinja2/filters.py", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "    if (!read_only_view.Map(0))\n      return SBOX_TEST_INVALID_PARAMETER;\n    std::string contents(reinterpret_cast<char*>(read_only_view.memory()));\n    if (contents != \"Hello World\")\n      return SBOX_TEST_INVALID_PARAMETER;\n    Sleep(INFINITE);\n    return SBOX_TEST_TIMED_OUT;\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 5, 
                      "end_column": 7
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 29, 
                      "end_column": 30
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 7, 
                      "end_column": 13
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 26, 
                      "end_column": 42
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 43, 
                      "end_column": 47
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 5, 
                      "end_column": 7
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 21, 
                      "end_column": 34
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 22, 
                      "end_column": 33
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 7, 
                      "end_column": 13
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 5, 
                      "end_column": 11
                    }, 
                    "type": 3
                  }
                ]
              }, 
              "first_line_number": 311, 
              "match_reason": {
                "content": true
              }, 
              "scope": "sandbox::DispatchCall"
            }
          ], 
          "docid": "nze7Ipo0pbk", 
          "best_matching_line_number": 314, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "b271c3f8a6502f718a06d3bdb97e04556db85968", 
              "name": "src/sandbox/win/tests/common/controller.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  base::string16 string;\n  ASSERT_TRUE(ParseUsbStringDescriptor(\n      std::vector<uint8_t>(kBuffer, kBuffer + sizeof(kBuffer)), &string));\n  EXPECT_EQ(base::ASCIIToUTF16(\"Hello world!\"), string);\n}\n\nTEST_F(UsbDescriptorsTest, ShortStringDescriptorHeader) {\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 47, 
                      "end_column": 53
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 32, 
                      "end_column": 46
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 33, 
                      "end_column": 44
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 349, 
              "match_reason": {
                "content": true
              }, 
              "scope": "device::<anonymous>::UsbDescriptorsTest_StringDescriptor"
            }
          ], 
          "docid": "fYZYT043i7Y", 
          "best_matching_line_number": 352, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "b566a1e8b63b6ea29d30ad1158728602d5db34de", 
              "name": "src/device/usb/usb_descriptors_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  if( Tcl_GetIntFromObj(interp, objv[2], &do_calls) ) return TCL_ERROR;\n\n  val.flags = MEM_Str|MEM_Term|MEM_Static;\n  val.z = \"hello world\";\n  val.enc = SQLITE_UTF8;\n\n  for(i=0; i<repeat_count; i++){\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 3, 
                      "end_column": 5
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 38, 
                      "end_column": 39
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 55, 
                      "end_column": 61
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 11, 
                      "end_column": 24
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 12, 
                      "end_column": 23
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 3, 
                      "end_column": 6
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 9, 
                      "end_column": 10
                    }, 
                    "type": 6
                  }
                ]
              }, 
              "first_line_number": 79, 
              "match_reason": {
                "content": true
              }, 
              "scope": "test_value_overhead"
            }
          ], 
          "docid": "xstcR7zwdzg", 
          "best_matching_line_number": 82, 
          "language": "c", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "e916eb9882c5d66b801fee06770e40f50d1db61f", 
              "name": "src/third_party/sqlite/src/src/test5.c", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  my $Document = $Lexer->lex_tokenizer($Tokenizer);\n  \n  # Build a PPI::Document object for some raw source\n  my $source = \"print 'Hello World!'; kill(Humans->all);\";\n  $Document = $Lexer->lex_source($source);\n  \n  # Build a PPI::Document object for a particular file name\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 3, 
                      "end_column": 5
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 4, 
                      "start_column": 3, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 3, 
                      "end_column": 5
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 16, 
                      "end_column": 58
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 24, 
                      "end_column": 35
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 8, 
                      "start_column": 3, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }
                ]
              }, 
              "first_line_number": 18, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "iuhEmEVfxlc", 
          "best_matching_line_number": 21, 
          "language": "perl", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "553dcd29717a6a13af173ab061dae72a732234c5", 
              "name": "src/third_party/perl/perl/vendor/lib/PPI/Lexer.pm", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "TEST_F(HttpNetworkLayerTest, GET) {\n  MockRead data_reads[] = {\n    MockRead(\"HTTP/1.0 200 OK\\r\\n\\r\\n\"),\n    MockRead(\"hello world\"),\n    MockRead(SYNCHRONOUS, OK),\n  };\n  MockWrite data_writes[] = {\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 14, 
                      "end_column": 39
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 14, 
                      "end_column": 27
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 15, 
                      "end_column": 26
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 307, 
              "match_reason": {
                "content": true
              }, 
              "scope": "net::<anonymous>"
            }
          ], 
          "docid": "KYtJbPpawFg", 
          "best_matching_line_number": 310, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "acce46301484f69db07e1bdfb88ce9c57cee6e0c", 
              "name": "src/net/http/http_network_layer_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 3
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  EXPECT_EQ(\"Hello World\", value);\n\n#if defined(OS_WIN)\n  std::wstring valuew(L\"Hello\");\n  StringAppendF(&valuew, L\" %ls\", L\"World\");\n  EXPECT_EQ(L\"Hello World\", valuew);\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 13, 
                      "end_column": 26
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 14, 
                      "end_column": 25
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 1, 
                      "end_column": 4
                    }, 
                    "type": 7
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 24, 
                      "end_column": 31
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 27, 
                      "end_column": 33
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 36, 
                      "end_column": 43
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 14, 
                      "end_column": 27
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 15, 
                      "end_column": 26
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 56, 
              "match_reason": {
                "content": true
              }, 
              "scope": "base::StringPrintfTest_StringAppendfString"
            }
          ], 
          "docid": "4gJ1NA-PqFY", 
          "best_matching_line_number": 56, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "3d43e8c6e478a62d3d5091f4347cedc12b4dd871", 
              "name": "src/base/strings/stringprintf_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "TEST_F(BlobImplTest, GetInternalUUID) {\n  const std::string kId = \"id\";\n  auto handle = CreateBlobFromString(kId, \"hello world\");\n\n  blink::mojom::BlobPtr ptr;\n  auto blob = BlobImpl::Create(std::move(handle), MakeRequest(&ptr));\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 3, 
                      "end_column": 8
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 27, 
                      "end_column": 31
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 3, 
                      "end_column": 7
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 43, 
                      "end_column": 56
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 44, 
                      "end_column": 55
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 3, 
                      "end_column": 7
                    }, 
                    "type": 3
                  }
                ]
              }, 
              "first_line_number": 105, 
              "match_reason": {
                "content": true
              }, 
              "scope": "storage"
            }
          ], 
          "docid": "O1MN1GmiIHI", 
          "best_matching_line_number": 107, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "c903d4083431a83b12d294e74399aa75fc77a4b7", 
              "name": "src/storage/browser/blob/blob_impl_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 8
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  BrokerServices* broker = GetBroker();\n  ASSERT_TRUE(broker);\n\n  base::StringPiece contents = \"Hello World\";\n  std::string name = \"TestSharedMemory\";\n  base::SharedMemoryCreateOptions options;\n  options.size = contents.size();\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 32, 
                      "end_column": 45
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 33, 
                      "end_column": 44
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 22, 
                      "end_column": 40
                    }, 
                    "type": 4
                  }
                ]
              }, 
              "first_line_number": 403, 
              "match_reason": {
                "content": true
              }, 
              "scope": "sandbox::PolicyTargetTest_ShareHandleTest"
            }
          ], 
          "docid": "53tOludJh2A", 
          "best_matching_line_number": 406, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "32df7b77b721b1430d226beb986ed663f3cade2c", 
              "name": "src/sandbox/win/src/policy_target_test.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "    , fPointCount(3)\n    , fWidth(2)\n    , fHeight(2)\n    , fText(\"Hello World\")\n    , fPoints2(kTestPoints2)\n    , fBitmap(TestBitmap())\n    { }\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 19, 
                      "end_column": 20
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 14, 
                      "end_column": 15
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 15, 
                      "end_column": 16
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 13, 
                      "end_column": 26
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 14, 
                      "end_column": 25
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 242, 
              "match_reason": {
                "content": true
              }, 
              "scope": "TestData::TestData"
            }
          ], 
          "docid": "WgJZ2_1n61U", 
          "best_matching_line_number": 245, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "1a1c20aadc39b897694b72635b325a72c343cff8", 
              "name": "src/third_party/skia/tests/CanvasTest.cpp", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  std::ostringstream out;\n  {\n    XmlElementWriter writer(out, \"foo\", XmlAttributes(\"bar\", \"baz\"));\n    writer.Text(\"Hello world!\");\n  }\n  EXPECT_EQ(\"<foo bar=\\\"baz\\\">Hello world!</foo>\\n\", out.str());\n}\n\nTEST(XmlElementWriter, SubElements) {\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 34, 
                      "end_column": 39
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 55, 
                      "end_column": 60
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 62, 
                      "end_column": 67
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 17, 
                      "end_column": 31
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 18, 
                      "end_column": 29
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 13, 
                      "end_column": 52
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 31, 
                      "end_column": 42
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 51, 
              "match_reason": {
                "content": true
              }, 
              "scope": "XmlElementWriter_ElementWithText"
            }
          ], 
          "docid": "oAd9RZslXO4", 
          "best_matching_line_number": 54, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "cc21c4bb66c62ae50804416b70f55aff3addccba", 
              "name": "src/tools/gn/xml_element_writer_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 4
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "                              const std::string& request_method,\n                              const std::string& redirect_method,\n                              bool include_data) {\n    static const char kData[] = \"hello world\";\n    TestDelegate d;\n    std::unique_ptr<URLRequest> req(default_context_.CreateRequest(\n        redirect_url, DEFAULT_PRIORITY, &d, TRAFFIC_ANNOTATION_FOR_TESTS));\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 31, 
                      "end_column": 36
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 31, 
                      "end_column": 36
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 31, 
                      "end_column": 35
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 5, 
                      "end_column": 11
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 12, 
                      "end_column": 17
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 18, 
                      "end_column": 22
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 33, 
                      "end_column": 46
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 34, 
                      "end_column": 45
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 3965, 
              "match_reason": {
                "content": true
              }, 
              "scope": "net::URLRequestTestHTTP::HTTPRedirectMethodTest"
            }
          ], 
          "docid": "Y_tvmPdbMWE", 
          "best_matching_line_number": 3968, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "0465babdd00838d4d4361c813c465abf72de95a1", 
              "name": "src/net/url_request/url_request_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": true, 
          "num_matches": 6
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "The interface provides two ways to calculate digests:  all-at-once,\nor in stages.  To illustrate, the following short program computes\nthe SHA-256 digest of \"hello world\" using each approach:\n\n\tuse Digest::SHA qw(sha256_hex);\n\n\t$data = \"hello world\";\n\t@frags = split(//, $data);\n\n\t# all-at-once (Functional style)\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 9, 
                      "end_column": 12
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 23, 
                      "end_column": 36
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 24, 
                      "end_column": 35
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 2, 
                      "end_column": 5
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 10, 
                      "end_column": 23
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 11, 
                      "end_column": 22
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 10, 
                      "end_line": 11, 
                      "start_column": 2, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }
                ]
              }, 
              "first_line_number": 267, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "SGMJgx92v1k", 
          "best_matching_line_number": 269, 
          "language": "perl", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "d8cc56136be72f9afaf866204cb7db2efb6f1eaf", 
              "name": "src/third_party/perl/perl/lib/Digest/SHA.pm", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "}\n\n- (void)sayHello {\n  NSLog(@\"Hello World\");\n}\n\n@end\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 4, 
                      "end_column": 8
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 9, 
                      "end_column": 23
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 11, 
                      "end_column": 22
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 1, 
                      "end_column": 5
                    }, 
                    "type": 7
                  }
                ]
              }, 
              "first_line_number": 16, 
              "match_reason": {
                "content": true
              }, 
              "scope": ""
            }
          ], 
          "docid": "2GWp5yx8nbM", 
          "best_matching_line_number": 19, 
          "language": "objectivec", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "5b2b54925e324637f5269a6296f7bedb5d596a5c", 
              "name": "src/tools/gyp/test/ios/framework/iOSFramework/Thing.m", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  $p1 = XML::Parser->new(Style => 'Debug');\n  $p1->parsefile('REC-xml-19980210.xml');\n  $p1->parse('<foo id=\"me\">Hello World</foo>');\n\n  # Alternative\n  $p2 = XML::Parser->new(Handlers => {Start => \\&handle_start,\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 35, 
                      "end_column": 42
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 2, 
                      "end_line": 2, 
                      "start_column": 18, 
                      "end_column": 40
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 14, 
                      "end_column": 46
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 28, 
                      "end_column": 39
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 6, 
                      "start_column": 3, 
                      "end_column": 1
                    }, 
                    "type": 5
                  }
                ]
              }, 
              "first_line_number": 340, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "MlqbhZ2K8kI", 
          "best_matching_line_number": 342, 
          "language": "perl", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "7dfe0e3244c12558d817afefcf494fb03a53ef57", 
              "name": "src/third_party/perl/perl/vendor/lib/XML/Parser.pm", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "#include <string.h>\n\nint main(int argc, char* argv[]) {\n  /* Use ppb_messaging to send \"Hello World\" to JavaScript. */\n  printf(\"Hello World STDOUT.\\n\");\n\n  /* Use ppb_console send \"Hello World\" to the JavaScript Console. */\n  fprintf(stderr, \"Hello World STDERR.\\n\");\n  return 0;\n}\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 1, 
                      "end_column": 9
                    }, 
                    "type": 7
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 1, 
                      "end_column": 4
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 10, 
                      "end_column": 13
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 20, 
                      "end_column": 24
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 3, 
                      "end_column": 63
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 33, 
                      "end_column": 44
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 10, 
                      "end_column": 33
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 11, 
                      "end_column": 22
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 3, 
                      "end_column": 70
                    }, 
                    "type": 5
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 28, 
                      "end_column": 39
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 8, 
                      "end_line": 8, 
                      "start_column": 19, 
                      "end_column": 42
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 8, 
                      "end_line": 8, 
                      "start_column": 20, 
                      "end_column": 31
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 9, 
                      "end_line": 9, 
                      "start_column": 3, 
                      "end_column": 9
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 9, 
                      "end_line": 9, 
                      "start_column": 10, 
                      "end_column": 11
                    }, 
                    "type": 6
                  }
                ]
              }, 
              "first_line_number": 7, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "rUsZrvhW2ME", 
          "best_matching_line_number": 10, 
          "language": "c", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "01792ee8be90670ff45772e5d5565a0236d31fc8", 
              "name": "src/native_client_sdk/src/examples/tutorial/using_ppapi_simple/hello_world.c", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 4
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  size_t length = 0;\n\n  EXPECT_TRUE(StringSearchIgnoringCaseAndAccents(\n      ASCIIToUTF16(\"hello\"), ASCIIToUTF16(\"hello world\"), &index, &length));\n  EXPECT_EQ(0U, index);\n  EXPECT_EQ(5U, length);\n\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 19, 
                      "end_column": 20
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 20, 
                      "end_column": 27
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 43, 
                      "end_column": 56
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 44, 
                      "end_column": 55
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 13, 
                      "end_column": 14
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 13, 
                      "end_column": 14
                    }, 
                    "type": 6
                  }
                ]
              }, 
              "first_line_number": 32, 
              "match_reason": {
                "content": true
              }, 
              "scope": "base::i18n::StringSearchTest_ASCII"
            }
          ], 
          "docid": "N4ATYs6Skws", 
          "best_matching_line_number": 35, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "69501d6c99f7b30d982b9d5fbd98a16bfd19c68d", 
              "name": "src/base/i18n/string_search_unittest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "assertEquals(1, String.prototype.endsWith.length);\n\nvar testString = \"Hello World\";\nassertTrue(testString.endsWith(\"\"));\nassertTrue(testString.endsWith(\"World\"));\nassertFalse(testString.endsWith(\"world\"));\nassertFalse(testString.endsWith(\"Hello World!\"));\nassertFalse(testString.endsWith(null));\nassertFalse(testString.endsWith(undefined));\nassertFalse(testString.endsWith());\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 1, 
                      "end_line": 1, 
                      "start_column": 14, 
                      "end_column": 15
                    }, 
                    "type": 6
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 1, 
                      "end_column": 4
                    }, 
                    "type": 3
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 18, 
                      "end_column": 31
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 3, 
                      "end_line": 3, 
                      "start_column": 19, 
                      "end_column": 30
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 32, 
                      "end_column": 34
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 32, 
                      "end_column": 39
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 33, 
                      "end_column": 40
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 33, 
                      "end_column": 47
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 7, 
                      "end_line": 7, 
                      "start_column": 34, 
                      "end_column": 45
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 8, 
                      "end_line": 8, 
                      "start_column": 33, 
                      "end_column": 37
                    }, 
                    "type": 3
                  }
                ]
              }, 
              "first_line_number": 28, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "-lH84P8SPvI", 
          "best_matching_line_number": 30, 
          "language": "javascript", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "b776ccc4bab8322d4d2dc0c4a92d24509e016bfc", 
              "name": "src/v8/test/mjsunit/es6/string-endswith.js", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "You can launch the app by using one of the wrappers.\n\n```shell\nout/Default/bin/content_shell_apk launch [--args='--foo --bar'] 'data:text/html;utf-8,<html>Hello World!</html>'\nout/Default/bin/chrome_public_apk launch [--args='--foo --bar'] 'data:text/html;utf-8,<html>Hello World!</html>'\n```\n\n## Log output\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 93, 
                      "end_column": 104
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 5, 
                      "end_line": 5, 
                      "start_column": 93, 
                      "end_column": 104
                    }, 
                    "type": 41
                  }
                ]
              }, 
              "first_line_number": 10, 
              "match_reason": {
                "content": true
              }
            }
          ], 
          "docid": "NHC7mIfD55o", 
          "best_matching_line_number": 13, 
          "language": "markdown", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "3d3f2ffdb0e457ef343d1a4648875307bb9502be", 
              "name": "src/docs/android_debugging_instructions.md", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 2
        }, 
        {
          "snippet": [
            {
              "text": {
                "text": "  WebContents* web_contents = GetFirstAppWindowWebContents();\n  ASSERT_TRUE(web_contents);\n  content::ContextMenuParams params;\n  params.selection_text = base::ASCIIToUTF16(\"Hello World\");\n  std::unique_ptr<PlatformAppContextMenu> menu;\n  menu.reset(new PlatformAppContextMenu(web_contents->GetMainFrame(), params));\n  menu->Init();\n", 
                "range": [
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 46, 
                      "end_column": 59
                    }, 
                    "type": 4
                  }, 
                  {
                    "range": {
                      "start_line": 4, 
                      "end_line": 4, 
                      "start_column": 47, 
                      "end_column": 58
                    }, 
                    "type": 41
                  }, 
                  {
                    "range": {
                      "start_line": 6, 
                      "end_line": 6, 
                      "start_column": 14, 
                      "end_column": 17
                    }, 
                    "type": 3
                  }
                ]
              }, 
              "first_line_number": 385, 
              "match_reason": {
                "content": true
              }, 
              "scope": "extensions"
            }
          ], 
          "docid": "ox6o45sCQxs", 
          "best_matching_line_number": 388, 
          "language": "c++", 
          "is_augmented": false, 
          "match_reason": {
            "content": true
          }, 
          "full_history_search": false, 
          "num_duplicates": 0, 
          "top_file": {
            "file": {
              "changelist": "667431a65f77280bccb44e117242ca0fa8e89cf8", 
              "name": "src/chrome/browser/apps/app_browsertest.cc", 
              "package_name": "chromium", 
              "revision": "0"
            }
          }, 
          "has_unshown_matches": false, 
          "num_matches": 1
        }
      ], 
      "results_offset": 0, 
      "maybe_skipped_documents": false, 
      "next_page_token": "CPCNhvqRzvSuAwj096fE0qDi3wgI1tLQkN6tsuEJCLqZguqA/oyuCgiyvLiQv/TImQ4Ijpv+stLMsdIWCNqdutrAhY2nGgjat/qlta+1qBsIn5uWh/Ky4qkdCKH2+tLI1rWjHwiRzLSytLGw/B8IgvKOuJvg7KcgCLDiqsjNm9+rIAjG4Pb/55640CMI2IDr0s+t0sUpCLDuvZmB9fnYKQiypuvqy8nprCoIrIDuu6Cevb0rCMfL5e+AktPjLAiegcDT3NHgny4InYCC7tfz+c4uCPa8ztPCp760MQjC5Kvs2fCmrTIIms+Pvojzrrg0CILqkLCDsKKqNgiLpsr0rOyEwDcI/77YvfWT2Ns3COXz26PQp6KFOwjywIjNxrrDqTsIv4Weg52L6Mg8CJmpnbOWguyEPgjSmPfX4Nuy+T4I7p+0i9uvweo/CJ/CrqzyjI6NQQjZ/tr7sbDCsUgIx6/xk4bLs5tLCMLluIGt7dziTgik9dC1udj1klAI1vTC+5LEsfxYCNXWn+u+u5aBWgiY1pSMqbqLylsIwtPu1tCVs8liCNmdrIXK5Y7eYgjh4uy6j/Pb9WMIzcyKpuX8kcxnCISgrOLii52qbgjWqI3Xuq7kxG4Io//0xvCosfVuCIah64bdkZ3ncAiViJ62vKDBv3cI45vG6v7x48F9CLaX3vH0iZbDfQidmoiW1KeP7H8IpLichKvJkL2AAQiwmdDyk4TroYYBCPStrcTimvbWhgEIpqiFqJjvvtiIAQjXjP+qhJOR9IoBCO+zqsa/n8HOkgEI5+zk+bT2gPSWAQi5y9LRqeTum58BCO65ldnZqN+DoAEInoaGqYDB7rCgAQibhonYuZyqj6MBCNzJqYy8i9rCpQEIxP6Ty5n9ttCmAQjBsdvC77XGpa0BCL7Yp5Xu76X6sQEI947oqYObxImzAQiH9Irwi76PkLMBCOKjkuejiLqFtgEIk66Ysc3H8fi8AQiI7LHB4t7Mm74BCJ/gla7T8tX0vgEIkMi5/9bMwIC/AQjwkMuS9fqo0MABCICH5cGxyquOwQEIs+C97ZiMjJTEAQi47sHn+4jX5cYBCOH87rbByO+bxwEIjK6Um6G+6JfOAQjLyInJs9zd7NEBCNSSjoGEjZft0gEI5LPP0+3Hpa7UAQizu/Lj8rzqstgBCO245d2K5Kyy2gEIyZ3wiO+0rs/aAQimy4LmrfKV3dwBCMfUkLG7zpmb3gEIm6PQxIqk4dHgAQjW0L7+wKadgeIBCLaU+/6Csaex5wEI4I6muu7S073nAQjn2onzt/i67OkBCKni/PSjo+Cp6wEIwerqw9uJ44TtAQiexfb94Pn1qPIBCJnSoZGO8+fR8gEIgp/hwJ2yyMXzAQjy/cj4j5z/qP4BCNf/4POGs8r8/gE=", 
      "hit_max_to_score": false
    }
  ], 
  "elapsed_ms": 351
}